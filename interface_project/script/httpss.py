#_*_coding:utf-8_*_
import requests,json
from interface_project.base.basepage import BaseConfig
from interface_project.script.scripts import getYamlfield
from interface_project.script.scripts import retry
from interface_project.script import gl

class HttpWebRequestss(object):
    Url = "/machine/initMachine"

    payload = '374ca4d9c398a8b3362166776744eea8c23e8af2c32f3a594e29b58e195d16f81f42820592288be7dd8580962bc60d0c711d531f60f910a64817bf5eaa0b60423c6c969e4f9964b69807eb3fa5b3aba8f112fb79c176f7097f0fd60f97e75dce874adcaa5d1d9677db5d1acdc3cc365ace4949bb09475807591a65ef0c721ee823446278c3f9dbf3b57512bef7f426e2edbac084c38d9bbf767641ebb3c7d3bf2d3cc7c6fca0fb44acba0e852b541cf4cac953ee0341ea5b9c466a604e9fff621217a41225e7ac641d95eeb818e2e41eeaea5952b7a76a1d7ac8e67f1f19db7839a84c88c4960647bc1a88995e795a86b2da4b10638bf942a462fa0b923f5c72fd6d945d5be42a2732135465ab17186cbf13dd53755c3d09291116ba8fd73f21be6b88a3a49c31aa9e32a70e9c071000e0df2a2823111701608b2a6cb7f0c4b0127db5bc57f1f5f064c12d83bf40776d8b06e5146c65b04fe59e95d874786f1097d69d9db0b6eb3db37d1926e9b9f0d80a7c822661b0db264796c516ea01305ac7959650ab195e807221a7008a2cf51688d8a408e61d1043828b798c84610bad2d877ddd8a4a79872e56cbdd2f6b12ed43229a25ba3f6b667aa248ccbb2bac436e0b937c0036c845124522b80e0c989bb64353d9cddc982553acc233c5c001d425981aafea7762ede583c9b33420e110ba4829539d0029bfd6be58bb5f755194b0a6f88ee4c488fc253038768b793fed771c441d83b3059a0a0774300cd2b3f76e1f2c8ba31d05985cec00abbe65a44813f5a17252364257b763c7fabdcf382a4d4580bf2b0c72e3688c3ae0ec76d52de08024c1fb0f9a9424292d2d08c5acb8c6a9396e355e779bffd0f6d3fd602bfe005a110a0fc6d3fdd050fe64244c38e3ad99037cfb165f63ce4bdeb77040cda06bdf273ea4a179b62b377e44b6c676142240b4046f60bc89ff1b18893af4951bf1d66298d9c94f5dbe6ac8db53755c7f0e7acaecd625357c0ecf54c0fc235365b5e80b3980fdb00d02c55f5000dd27d1147fb56b056287fbd9179c431a3bf98e0f057a59639386570636afa7bdd256609af1f049f2c49234f3922c016fddbfd14b1fc1c9859e6af3b0af661b16e89878b46879873521efc1fb8bca680e18e05757c0adbd4428943c0b6944b2d6c6c96df62bbce6a4995e0d1d904a8ef37f26fd27461973f2be9aec9e5c1241aebf0c561c75f341f27a80bc5264c5cac33fdc14b81b2fd5bc52be4bd7ab8ea63d81f94c45783f75b223dafe093d705326ec058dfeda8f502dadb4489aacc92c12aa80d476fcad95e52b0870925fd970e8310224c6590a1662a0359dc1ed4e58acae55dcd47ef833e05068ad9be066f14de566e3a641fea59fb8022160d6619f7a7142d624c72013bf3a35c4e71c19be8d743737293c60afc0be4c4210091745289f601941b496e6f26e9b46d48b7b1d3e86e177a2a3e6eaac9aaa86797fde008f1cca1edd43aaba565418be38ef5ed9eed169faa6fb99dec638e86e006a9cab5d0974e934188d97aa20633cf8b1f2a9450b5c0875fd8500c9acadfa1f453ad1425a324a1e5c29fdebd821f80e2e63dff804868d7abccc0256dd54faa759cb8f58f77c8239766752379d89cc319c8e58d30df7e7d1f614c7797fceec8419260d65ff90ce5dcdc62d7aa31d7d66b5bfb12bafcb6c43e09cfae7ccb17ad2c1482d50e87bbf4329116230b92de7ae2063b70c7499905e5d68df7b84383687e0527962e176c3bfee699ff5184c3dbb0fba5c28c4419db448375d7f5c459eed75361d114398d4b84133bfdb53e39f7217efd6ffa9442b47ba8a58cbe7e944a708e40d29c41d0f1998d572fbd1703e1ccbb511cfbdf48c40a40cbb66ea56ed27d2195b6a9f50de2996d4e0a4059faa4f31ec506c0b56a03b06d36e643febaf75ad2c88f92ddef301719579e22e7084f85c704299008d280593ca25ea1ef5144f10e08b45b22ddd3518e314a673b3e545e529d512e34b99b26fd7f327499d3bdb9be3c353227c035caa197d6eb9e129118c1e808253dc873c343b99854c117ee76fbaa8e5198ab41431fd60a3eacdec6b09999bc724050277447ce7844cba639962d8dcd2ac6e49deda2b5a53a46a463ee528cfbbb67d02a2a244acaa5036957af11a4b31dd8d740f0a43c7be85a09ec8b5379a327946cc9506ab9ce3a25ea1edb639f54eb87883b7877c71b2e2a5b2bf8ee9020dbeb24b23fb6a1db2b3f52ab1d39696ae7514f2874d3f78ad0983ec08028db804933b21c478ff6acd82c215d2f5e5ac071bbacf795ff600664991fb68613ba00310025f5cb6ba29a40b90141d9d1eef3ca20a0c12dc7d77ec5d4812f6d75675684cd8c62c43db0021440361b2298ae24168a43f8c4dcceb625fff27b491e42effa38ae2e655754793ce897961626913a058ba303c032e8a47c7dbb50f1af7d1e1278307315ae0dd6239f227b8b724f135ef04783a0fabf6d7a280e3f6703e98675112c4e53f7b96fb9132c5ee0a5edd7665b1c9aea886f2cc338c4776042f6ae74f4adabbc391c4eef7dc6b6e1e3f837633d1fd3d5d962bd04766f74b5f026e1461b926581e817878d4251c3cc2582927e2d1f41ae2b5b624e841dc88800061295b2c60ecdeb6aa57e7307b04fbad45100514646de62a41757924be54d2ddc503ff5a6b49731a4b50f402578d87e78a1aaa131c96ff74dc526128933a396e259d64dcf9ea312678a4db2c91dfaabfb23fbb34096dc7ab0975c13559e3576d826467b21bc4b5911adb5a872086b3f090c5ebd6f34bee15662ad72305c7d916e919a28878c0069bfc9dd3f67f26f45d589a8c79d0126066c8371830a0024e10d89c6da6ff87652d8b6ca8746e32eaf18b7d2b610dcd82d5168149fe108574d08735f2260c'
    #'keword=&code=&pageNo='
    # headers = {
    #     'content-type': "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
    #     'cache-control': "no-cache",
    #     'postman-token': "6eb8950f-4839-3857-15e9-91a14c7e1663"
    # }

    def __init__(self):
        pass


    def tokens(self):
        self.token = BaseConfig().base_token
        headers = {
            'Content-Type': "application/json",
            'cache-control': "no-cache",
        }
        headers['lf-None-Matoh'] = self.token
        return headers

    #post方法
    @property
    @retry(reNum=getYamlfield(gl.configFile)['RETRY']['ReNum'])
    def post(self):
        #url拼接
        self.full_url = BaseConfig().app_url + self.Url

        #发送post请求
        res = requests.request("POST",self.full_url,data=self.payload,headers=self.tokens())
        return res.text
        # if res.status_code ==200:
        #     return res.json()
        # else:
        #     return {"errcode": 9001, "errmsg": str(res)}

if __name__=="__main__":
    print HttpWebRequestss().post
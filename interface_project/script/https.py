#_*_coding:utf-8_*_
import requests,json
from interface_project.base.basepage import BaseConfig
from interface_project.script.scripts import getYamlfield
from interface_project.script.scripts import retry
from interface_project.script import gl

class HttpWebRequests(object):
    Url = "/machine/initMachine"

    payload = 'cbd4e2944dc123025332f295e55c5685bac3b5fd079ddd392b6cc9197c2bdd881409e165e98fe599764f912c545ebf9b83929c942ac4821e9a32b41cb7c482ffbd7d9e07eda973f82862038aa5622e13f5930b36f499a7a00838cf47c788e0719831f558c552db80561b06d5d46c4571c17ef886e21f536d635a869b538ee5a677e61f15e19d16bf089c948d5e7bc0613143fac413ebeca208587df29077b00281721cc600c1e2e13e4a036a29c00f6ddcbca65e72a247233750ed366da69bdb1b4253a6a778a0416b9a4ae38fc96e073c71df4ab8e271014cf11a4b8a17d4af71cea0a9e7b0b56bf95a3fe013b35c73311f90e6bd99c9ce7e5de6c31649c7507840bec5a7589301bfd228ce8423816c3d84dd4d4dfca6b28b384627777d684c052d0004bab77356e9905b51b329bc28d71a6f16520fc3c86fec5a673f4da6c719c15bc5c1702a027d40389903b2c6131ad39fac62fc51f57ef4906d04c223d9c0a0ae82b62e98bfd27162a197212f77b851bbf05366b0ba09b9e690010003a01b2088b7992add46343bc7dcfcc555cdb545383e66dcb7f87b58ff67bb03229b88b0b06a4af726e7db7f946600322e2a6598017f90dd601337699013d6bd6e7dae0e89f136e84642edf4db8e9d405fec1ae236418b0130fe6b551ab51ddbdd6ebb745823c9591acfe2beee2c5e5072faa19b14e7183af2c7083636bc69d9c12911319a9171b5445282090e30dfd0107bb0c74e42af69b85c81aca154283f14e83a592960a7f1c44846cb4c937a63bd58ce8965a5c3de1c7fda432e2c29f06cd709f7db473ade35ef0ca5c5fbe143e75c180dbbc1b966dfcad22ac334f94b00fef549a7c3bda3cdc7c1af8729b3c1b8eedbadca098956c03c3f4e7a04488e096ff5f5ec9c0f3453c3a76c0eaf197d422ee011464be4e913895133c3ec8d35b7ae41d5f9d8cfbb4dee3ae66b9c02863a6b1ef0d8709bde6e4e3d9580a708e1f29b6b255e5ee7e8fc0ee568486dcea2f1bbf307fa547bd8b753bb7dbcac2e821de2728fb303ebe4aa34910821083b43c944c4e4af4b51fd797c6d3c73ee49577dfbca17b96977e7c939daee0f4806e5abbd9f63358dbaa7c040d50edeb95472de39198277a67d124427ee2b3b8be394387ce8316832960e3a7b69bcd2645d1e3d7d465ffdd4efa5411e0bb4fadd76e9a2eb9f7b2e192a6d588dad16dfef5d431d862350e16ccf1718549d3131fd35383acdb6c89c9e2fd93bc234329e4ec0b07a659cc053823df69a4271745acc9b44e329ba6c3bb99f3e5321862707731edea4d5e49d0c9aacfcf575b0361adbf7b3af40b914bc7fc626098dd35a1cb8fcf7caccf2028ded6243a0df009d184a4358c7fd437b8b39108fbc396fab83138316baa11f35e1e407cde910c122b500d11578783d068fb060c37fa7b5b2249f39e70ff34f7a4eddee1ae00b6f45dcd30ae53b9bb094d8fb1d7882594dac2eddfc40de578c81ea886fb5e598f6caf31e931af8e6122955108acb1814b73a859929fc8f22eb01c2f09cbfbb6356bbc36618ef4f2f2dd612c9706430e899e744268e455d9fa745813a40a17bc521b8c3f96ba1a2c82bf329f75e04c9a68c6b37ba61e40adc4c3a5494ce954c3a54497bc9e4f70f5c81b0821adc84568adebb51f8113daf0a7578a871fa86eb04c78699974bc6d0092cef8b7ae3421f1dd11ecf589cb6e86ab4796a8d5809f824f3266eeb3ce16ce51c4c182acc1665a1197d7ae8d532e178aa5882024aea79f7158a1fcfc50e09a1bbc4ab72fb03e59d970d8ef511bbf5826c676f8c0d815b7a639621e8f74fcacb3ed14adfc8ae171fab8ae3c8b6fb4bb47b88b9b5c04763b637dbacac963a485bfb1de9f1f2b530fe09a01a8de5c29a6e3143b8c3c03ede63ffc079eb59ffe6ff4ef1dfcc04a90a6061e27c54daa1bda7270d77598dca4d950c78bfed824eb39d24b6e5130b84a49c5325e52c6edde96c3b49ca66799ce1ac1e123e3c3b69d47c88b82e261e6a29ac9a8f04f1941638f73204199cf92cd43236f0d4b188d6ce4cc146911d6c9d66f2b45977d40bf6dafde63142dc4195aed6ff211e9b3325afabc958c98ed38ef3aa0dc8ad2a062b31fc74dd3bb0d7993bc3b5c73b83e4b0312de911cc9148e4afea659cdb5b5407f3f1adcc9b1a48b45fd01bdadad3af92020fcda2efb0786f3c5bb12843429fb9f60383a91487292ef1761a090efe21ee8ae19f0f3ad784d4408a39c18a7b2065633fcbab793209ceb83560d571f4160c7d6aa13b1717e9f6f3fbe75b60782f9da84e2e2e6853d147fb35c7c5c671d8c9b0ad3c0c0f06a835c6cc06cdad94d98f9bfe4e5032f832aa728c13c916dc03a059aa5c07a2d85a47dc01e0d4f30bb8c2f812a00948aac66e70e6480a06f57239454eb7c07801a3d4e6ec97b61d0c9457ac06353a0e0dd8866ccaba80652e6534f57fe6d79467e45d86b432d1d3bebc143d53dc10ab83bda6feab35ccb2dab6b899660a2d38993d314796e0b26caa3061bc577d2afc0f240d5aca95462b34fe74096dba4cdab66ca6f7dfbc0baed05af5b1a9cf22a571247c36e0f4415c4f4cce1d5271ff2bce563ffff5f88cff247706ded965c8347d9d3185087f6c2a560cb80bf1a7ae867306f1a0e7b1e0fe795f4738d981ba61c6c27972c8105d857b46eaea22a1cb75fa7c0d124976c39ca61532e95e4055f15e215811c830558cdaa62b37fcd94c5d9c674bf1b1163b9c68c0bafdb5167ec1c66576e404909cd4d2ee0a6d5795656ba35ec3273937b2b285098baac6aaeed409b291482f38efc81e639fb83e5a97bf4b410a9eec1fed521d2ee930cfe50d94acb36bf9aaee3d221bc35860de4c8247731fadac042eb58f1ea31cedb5eaa7c276a96076640512632ac31a4576a9b0519f9e666f8fdcad7547aaa332c194176d4ef3e0f60b36a2e6a2d98bc98aa478f462ec5ef33534bce044baddeb15960d3c2ef0efb538215f13caafb2d5091824046231bf69acbc0a356c749caa04dedb0300d7f89bfe95ae36ed3eda6ba66cf8f936079ab84bb78bcf35286981fd6bcacd725e06211ad54c5115645c542d5270ee1545c79352d53a4ad918e2de7508b49d80dc1f034376e1dc4859391235e5b597e4bdb34cf70984f148a625b4b458e75f5b3c38d8da5ac3259ef573dbd5fe06b8e4d2f7deced3fb25d32056dd220d1cac3896d2760df090bfed60a7974bee669206b7eab9a6a635a7ca11db8dfd8b8174c4372c8bab06f1f1195e2d89247871cd03adc9e27f85f1384b24a2747619744c8bc048b19b7569a7f8105329de27505f489e991d6a156fc69eb3eb5fa2c59e1d0dde921b49a708097a606118ab5e1bce790586d968a8a80b92fc4f4292962e139c336f23581ce4a14ed015148fdcee84cb4fefcf1c054a959ad7971f5a7c68a65486f271aad5fb1286fa4c5a89d3685fdeb5b81a3351e19b3b2d114c896cbc72d7df2d2b4500f061866297d422d5ebd87e28de7f0e659c6c643f862cf03b80feb09e777d775e84dd62f352ac8d1c910d80d910153daa9bde84ac1eaab1a5dfc0d81007cdf84e0843ff14ec9d4aa8cf602e84965f4c5eda2a864461468d4dfd859682645d34d2b98ad67a530072d304a331527e6dba44ff5c9084e06c275ecef8ef79d1aa88e0853ab3cce8e0de'
    #'keword=&code=&pageNo='
    # headers = {
    #     'content-type': "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
    #     'cache-control': "no-cache",
    #     'postman-token': "6eb8950f-4839-3857-15e9-91a14c7e1663"
    # }

    def __init__(self):
        pass


    def tokens(self):
        self.token = BaseConfig().base_token
        headers = {
            'Content-Type': "application/json",
            'cache-control': "no-cache",
        }
        headers['lf-None-Matoh'] = self.token
        return headers

    #post方法
    @property
    @retry(reNum=getYamlfield(gl.configFile)['RETRY']['ReNum'])
    def post(self):
        #url拼接
        self.full_url = BaseConfig().base_url + self.Url

        #发送post请求
        res = requests.request("POST",self.full_url,data=self.payload,headers=self.tokens())
        if res.status_code ==200:
            return res.json()
        else:
            return {"errcode": 9001, "errmsg": str(res)}

if __name__=="__main__":
    print json.dumps(HttpWebRequests().post).decode('unicode-escape')